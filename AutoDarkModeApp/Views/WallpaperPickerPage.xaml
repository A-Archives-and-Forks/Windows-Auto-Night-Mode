<Page
    x:Class="AutoDarkModeApp.Views.WallpaperPickerPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:CommunityToolkit.WinUI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="using:AutoDarkModeApp.Helpers"
    xmlns:lib="using:AutoDarkModeLib.Helpers"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:ui="using:CommunityToolkit.WinUI"
    mc:Ignorable="d">
    <Page.Resources>
        <helpers:FlagsToVisibilityConverter x:Key="FlagsToVisibilityConverter" />
        <helpers:EnumToIndexConverter x:Key="EnumToIndexConverter" />
        <helpers:EnumToStretchConverter x:Key="EnumToStretchConverter" />
    </Page.Resources>

    <ScrollViewer>
        <Grid x:Name="ContentArea" Margin="{StaticResource NavigationViewPageContentMargin}">
            <StackPanel Style="{StaticResource PageBaseStackPanelStyle}">
                <!--
                    TODO:
                    * Hide Border when setting == Spotlight?
                    * Hide DesktopPreviewImage when setting == Solid Color
                    * Stretch = ViewModel.SelectWallpaperFillingMode
                    * Get system display size (aspect ratio) and apply it to the image (width) ?
                -->
                <Border
                    Margin="0,0,0,12"
                    HorizontalAlignment="Left"
                    Background="{x:Bind ViewModel.ColorPreviewBorderBackground, Mode=OneWay}"
                    BorderBrush="Black"
                    BorderThickness="8"
                    CornerRadius="{StaticResource OverlayCornerRadius}">
                    <Image
                        x:Name="DesktopPreviewImage"
                        Width="320"
                        Height="180"
                        Source="{x:Bind ViewModel.GlobalWallpaperSource, Mode=OneWay}"
                        Stretch="{x:Bind ViewModel.SelectWallpaperFillingMode, Converter={StaticResource EnumToStretchConverter}, Mode=OneWay}"
                        ToolTipService.ToolTip="{x:Bind ViewModel.GlobalWallpaperPath, Mode=OneWay}" />
                </Border>

                <!--  Desktop background  -->
                <controls:SettingsCard Header="{lib:ResourceString Name=WallpaperToggleSwitch}">
                    <ToggleSwitch IsOn="{x:Bind ViewModel.IsWallpaperSwitchEnabled, Mode=TwoWay}" />
                </controls:SettingsCard>

                <!--  Wallpaper Switch Theme  -->
                <controls:SettingsCard
                    Header="{lib:ResourceString Name=WallpaperComboBoxMode}"
                    HeaderIcon="{ui:FontIcon Glyph=&#xE790;}"
                    IsExpanded="True"
                    Visibility="{x:Bind ViewModel.IsWallpaperSwitchEnabled, Mode=OneWay}">

                    <!--  Wallpaper Switch Theme  -->
                    <ComboBox SelectedIndex="{x:Bind ViewModel.SelectWallpaperThemeMode, Converter={StaticResource EnumToIndexConverter}, Mode=TwoWay}">
                        <ComboBoxItem Content="{lib:ResourceString Name=ThemeLight}" />
                        <ComboBoxItem Content="{lib:ResourceString Name=ThemeDark}" />
                    </ComboBox>

                    <controls:SettingsExpander.Items>
                        <!--  Background Type  -->
                        <controls:SettingsCard ContentAlignment="Left">
                            <RadioButtons SelectedIndex="{x:Bind ViewModel.CurrentDisplayMode, Converter={StaticResource EnumToIndexConverter}, Mode=TwoWay}">
                                <RadioButton Content="{lib:ResourceString Name=WallpaperComboBoxItemPicture}" />
                                <RadioButton Content="{lib:ResourceString Name=WallpaperComboBoxItemPictureMM}" />
                                <RadioButton Content="{lib:ResourceString Name=WallpaperComboBoxItemSolidColor}" />
                                <RadioButton Content="{lib:ResourceString Name=WallpaperComboBoxItemSpotlight}" />
                            </RadioButtons>
                        </controls:SettingsCard>

                            <!--  Image  -->
                            <Grid RowSpacing="12" Visibility="{x:Bind ViewModel.CurrentDisplayFlags, Converter={StaticResource FlagsToVisibilityConverter}, ConverterParameter=ShowImageSettings, Mode=OneWay}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <TextBlock
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    VerticalAlignment="Center"
                                    Style="{StaticResource BodyStrongTextBlockStyle}"
                                    Text="{helpers:ResourceString Name=WallpaperTextBlockChooseWallpaper}" />
                                <Button
                                    Grid.Row="0"
                                    Grid.Column="1"
                                    MinWidth="120"
                                    HorizontalAlignment="Right"
                                    Command="{x:Bind ViewModel.PickFileCommand}"
                                    Content="{helpers:ResourceString Name=dbFilePicker}" />

                                <TextBlock
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    VerticalAlignment="Center"
                                    Style="{StaticResource BodyStrongTextBlockStyle}"
                                    Text="{helpers:ResourceString Name=WallpaperTextBlockImagePath}" />
                                <HyperlinkButton
                                    x:Name="GlobalWallpaperPathHyperlinkButton"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    MinWidth="120"
                                    HorizontalAlignment="Right"
                                    Click="GlobalWallpaperPathHyperlinkButton_Click"
                                    Content="{x:Bind ViewModel.GlobalWallpaperPath, Mode=OneWay}" />
                            </Grid>

                            <!--  Monitor  -->
                            <Grid RowSpacing="12" Visibility="{x:Bind ViewModel.CurrentDisplayFlags, Converter={StaticResource FlagsToVisibilityConverter}, ConverterParameter=ShowMonitorSettings, Mode=OneWay}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Border
                                    Grid.Row="0"
                                    BorderBrush="{ThemeResource DividerStrokeColorDefault}"
                                    BorderThickness="0,1,0,0" />
                                <StackPanel
                                    Grid.Row="1"
                                    Orientation="Horizontal"
                                    Spacing="12">
                                    <TextBlock
                                        VerticalAlignment="Center"
                                        Style="{StaticResource BodyStrongTextBlockStyle}"
                                        Text="{helpers:ResourceString Name=WallpaperComboBoxMonitor}" />
                                    <HyperlinkButton Click="RemoveDisconnectedMonitorsHyperlinkButton_Click" Content="{helpers:ResourceString Name=WallpaperHyperLinkRemoveDisconnected}" />
                                </StackPanel>
                                <ComboBox
                                    x:Name="MonitorsComboBox"
                                    HorizontalAlignment="Right"
                                    SelectedItem="{x:Bind ViewModel.SelectMonitor, Mode=TwoWay}" />
                            </Grid>

                            <!--  Wallpaper Filling Way  -->
                            <Grid RowSpacing="12" Visibility="{x:Bind ViewModel.CurrentDisplayFlags, Converter={StaticResource FlagsToVisibilityConverter}, ConverterParameter=ShowFillingWaySettings, Mode=OneWay}">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <Border
                                    Grid.Row="0"
                                    BorderBrush="{ThemeResource DividerStrokeColorDefault}"
                                    BorderThickness="0,1,0,0" />
                                <TextBlock
                                    Grid.Row="1"
                                    VerticalAlignment="Center"
                                    Style="{StaticResource BodyStrongTextBlockStyle}"
                                    Text="{helpers:ResourceString Name=WallpaperTextBlockPosition}" />
                                <ComboBox
                                    Grid.Row="1"
                                    HorizontalAlignment="Right"
                                    SelectedIndex="{x:Bind ViewModel.SelectWallpaperFillingMode, Converter={StaticResource EnumToIndexConverter}, Mode=TwoWay}">
                                    <ComboBoxItem Content="{helpers:ResourceString Name=WallpaperComboBoxItemFill}" />
                                    <ComboBoxItem Content="{helpers:ResourceString Name=WallpaperComboBoxItemFit}" />
                                    <ComboBoxItem Content="{helpers:ResourceString Name=WallpaperComboBoxItemStretch}" />
                                </ComboBox>
                            </Grid>

                            <!--  Color  -->
                            <Grid RowSpacing="12" Visibility="{x:Bind ViewModel.CurrentDisplayFlags, Converter={StaticResource FlagsToVisibilityConverter}, ConverterParameter=ShowColorSettings, Mode=OneWay}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="12" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <TextBlock
                                    Grid.Column="0"
                                    VerticalAlignment="Center"
                                    Style="{StaticResource BodyStrongTextBlockStyle}"
                                    Text="{helpers:ResourceString Name=WallpaperColor}" />
                                <Border
                                    Grid.Column="1"
                                    Width="34"
                                    Height="30"
                                    Background="{x:Bind ViewModel.ColorPreviewBorderBackground, Mode=OneWay}"
                                    BorderBrush="{StaticResource ControlElevationBorderBrush}"
                                    BorderThickness="1"
                                    CornerRadius="{StaticResource ControlCornerRadius}" />
                                <!--  TODO: Replace Content to Res  -->
                                <Button
                                    MinWidth="120"
                                    Click="CheckColorButton_Click"
                                    Content="Select color" />
                            </StackPanel>
                        </controls:SettingsCard>

                            <!--  Windows Spotlight  -->
                            <Grid Visibility="{x:Bind ViewModel.CurrentDisplayFlags, Converter={StaticResource FlagsToVisibilityConverter}, ConverterParameter=ShowSpotlight, Mode=OneWay}">
                                <HyperlinkButton Click="WindowsSpotlightHyperlinkButton_Click" Content="{helpers:ResourceString Name=WallpaperComboBoxItemSpotlight}" />
                            </Grid>
                        </StackPanel>
                    </controls:SettingsCard.Description>
                </controls:SettingsCard>

                <TeachingTip
                    x:Name="WallpaperPreviewTeachingTip"
                    Title="{helpers:ResourceString Name=WallpaperComboBoxItemPicture}"
                    CloseButtonContent="{helpers:ResourceString Name=msgClose}"
                    IsLightDismissEnabled="True"
                    Target="{x:Bind GlobalWallpaperPathHyperlinkButton}">
                    <TeachingTip.Content>
                        <Border
                            MinHeight="100"
                            Margin="16"
                            CornerRadius="{StaticResource OverlayCornerRadius}">
                            <Image x:Name="WallpaperPreviewImage" />
                        </Border>
                    </TeachingTip.Content>
                </TeachingTip>

                <!--  Color Picker Dialog  -->
                <ContentDialog
                    x:Name="ColorPickerContentDialog"
                    CloseButtonText="{lib:ResourceString Name=cancel}"
                    DefaultButton="Primary"
                    PrimaryButtonText="{lib:ResourceString Name=lblSet}">
                    <StackPanel>
                        <ColorPicker x:Name="CheckColorColorPicker" />
                    </StackPanel>
                </ContentDialog>

            </StackPanel>
        </Grid>
    </ScrollViewer>

</Page>
