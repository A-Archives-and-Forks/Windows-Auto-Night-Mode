<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="TrayMenuItem_Close" xml:space="preserve">
    <value>&amp;Cierre</value>
  </data>
  <data name="TrayMenuItem_ForceDarkTheme" xml:space="preserve">
    <value>Forzar el &amp;Tema Oscuro</value>
  </data>
  <data name="TrayMenuItem_ForceLightTheme" xml:space="preserve">
    <value>Forzar el &amp;Tema Claro</value>
  </data>
  <data name="TrayMenuItem_OpenConfigDir" xml:space="preserve">
    <value>&amp;Abrir el directorio de la configuración</value>
  </data>
  <data name="TrayMenuItem_AutomaticThemeSwitch" xml:space="preserve">
    <value>&amp;Cambio automático de tema</value>
  </data>
  <data name="TrayMenuItem_ThemeSwitchPause" xml:space="preserve">
    <value>&amp;Pausa el cambio automático</value>
  </data>
  <data name="TrayMenuItem_ToggleTheme" xml:space="preserve">
    <value>&amp;Alternar tema</value>
  </data>
  <data name="TrayMenuItem_TryFixTheme" xml:space="preserve">
    <value>Intentar arreglar el tema</value>
  </data>
  <data name="Until" xml:space="preserve">
    <value>Hasta</value>
  </data>
  <data name="UntilSunset" xml:space="preserve">
    <value>Hasta el próximo atardecer</value>
  </data>
  <data name="Light" xml:space="preserve">
    <value>Claro</value>
  </data>
  <data name="Dark" xml:space="preserve">
    <value>Oscuro</value>
  </data>
  <data name="Paused" xml:space="preserve">
    <value>Pausado</value>
  </data>
  <data name="Disabled" xml:space="preserve">
    <value>Desactivado</value>
  </data>
  <data name="Enabled" xml:space="preserve">
    <value>Activado</value>
  </data>
  <data name="Msg_SwitchPending" xml:space="preserve">
    <value>Cambio de tema en espera</value>
  </data>
  <data name="Msg_PendingQuestion" xml:space="preserve">
    <value>¿Quieres cambiar ya o posponerlo más?</value>
  </data>
  <data name="PostponeTime_120" xml:space="preserve">
    <value>2 horas</value>
  </data>
  <data name="PostponeTime_15" xml:space="preserve">
    <value>15 minutos</value>
  </data>
  <data name="PostponeTime_180" xml:space="preserve">
    <value>3 horas</value>
  </data>
  <data name="PostponeTime_30" xml:space="preserve">
    <value>30 minutos</value>
  </data>
  <data name="PostponeTime_360" xml:space="preserve">
    <value>6 horas</value>
  </data>
  <data name="PostponeTime_60" xml:space="preserve">
    <value>1 hora</value>
  </data>
  <data name="PostponeTime_720" xml:space="preserve">
    <value>12 horas</value>
  </data>
  <data name="Delay" xml:space="preserve">
    <value>Demorar</value>
  </data>
  <data name="SwitchNow" xml:space="preserve">
    <value>Cambiar ahora</value>
  </data>
  <data name="Msg_PauseActionDisableQuestion" xml:space="preserve">
    <value>¿Te gustaría desactivar el cambio automático en su lugar?</value>
  </data>
  <data name="Msg_PauseActionNotification" xml:space="preserve">
    <value>El cambio automático también se reanudará si vuelves a tu tema anterior.</value>
  </data>
  <data name="Msg_PauseHeader" xml:space="preserve">
    <value>Cambio de tema pausado hasta</value>
  </data>
  <data name="RevertAction" xml:space="preserve">
    <value>Revertir esta acción pulsando en el botón deshacer de abajo.</value>
  </data>
  <data name="AutomaticThemeSwitch" xml:space="preserve">
    <value>Cambio de tema automático</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirmar</value>
  </data>
  <data name="RequestSwitchAction" xml:space="preserve">
    <value>Pulsa confirmar para solicitar un cambio de tema inmediatamente.</value>
  </data>
  <data name="Undo" xml:space="preserve">
    <value>Deshacer</value>
  </data>
  <data name="UpdateToast_AnErrorOccuredPatching" xml:space="preserve">
    <value>Ocurrió un error parcheando.</value>
  </data>
  <data name="UpdateToast_CurrentVersion" xml:space="preserve">
    <value>Versión actual</value>
  </data>
  <data name="UpdateToast_DowngradingTo" xml:space="preserve">
    <value>Volviendo a la versión anterior</value>
  </data>
  <data name="UpdateToast_Downloading" xml:space="preserve">
    <value>Descargando…</value>
  </data>
  <data name="UpdateToast_DownloadInProgress" xml:space="preserve">
    <value>Descarga en proceso</value>
  </data>
  <data name="UpdateToast_Message" xml:space="preserve">
    <value>Mensaje</value>
  </data>
  <data name="UpdateToast_NewVersionAvailable" xml:space="preserve">
    <value>Nueva versión {0} disponible</value>
    <comment>MUST contain the placerholder string!! That's where the version number is injected.</comment>
  </data>
  <data name="UpdateToast_PatchingFailed" xml:space="preserve">
    <value>Parcheado fallido</value>
  </data>
  <data name="UpdateToast_SeeLogs" xml:space="preserve">
    <value>Por favor, revisa service.log y updater.log para más información</value>
  </data>
  <data name="UpdateToast_UpgradingTo" xml:space="preserve">
    <value>Actualizando a</value>
  </data>
  <data name="UpdateToast_ButtonDowngrade" xml:space="preserve">
    <value>Volver a una versión anterior</value>
  </data>
  <data name="UpdateToast_ButtonOpenLogDirectory" xml:space="preserve">
    <value>Abrir carpeta de registro</value>
  </data>
  <data name="UpdateToast_ButtonPostpone" xml:space="preserve">
    <value>Posponer</value>
  </data>
  <data name="UpdateToast_ButtonUpdate" xml:space="preserve">
    <value>Actualizar</value>
  </data>
  <data name="UpdateToast_DowngradeAvailable" xml:space="preserve">
    <value>Versión anterior {0} disponible</value>
    <comment>MUST contain the placerholder string!! That's where the version number is injected.</comment>
  </data>
  <data name="UpdateToast_GoToDownloadPage" xml:space="preserve">
    <value>Ir a la página de descargas</value>
  </data>
  <data name="DisableAutomaticSwitch" xml:space="preserve">
    <value>Desactivar cambio automático</value>
  </data>
  <data name="UntilSunrise" xml:space="preserve">
    <value>Hasta el próximo amanecer</value>
  </data>
  <data name="Msg_PauseOnce" xml:space="preserve">
    <value>¡El cambio de tema está pausado una vez!</value>
  </data>
  <data name="Msg_ResumeHeader" xml:space="preserve">
    <value>Cambio de tema automático reanudado</value>
  </data>
</root>